BEGIN;

CREATE TABLE language_list
(
    code text PRIMARY KEY,
    name text
);

INSERT INTO language_list
VALUES ('ab', 'Abkhaz'),
       ('aa', 'Afar'),
       ('af', 'Afrikaans'),
       ('ak', 'Akan'),
       ('sq', 'Albanian'),
       ('am', 'Amharic'),
       ('ar', 'Arabic'),
       ('an', 'Aragonese'),
       ('hy', 'Armenian'),
       ('as', 'Assamese'),
       ('av', 'Avaric'),
       ('ae', 'Avestan'),
       ('ay', 'Aymara'),
       ('az', 'Azerbaijani'),
       ('bm', 'Bambara'),
       ('ba', 'Bashkir'),
       ('eu', 'Basque'),
       ('be', 'Belarusian'),
       ('bn', 'Bengali'),
       ('bh', 'Bihari'),
       ('bi', 'Bislama'),
       ('bs', 'Bosnian'),
       ('br', 'Breton'),
       ('bg', 'Bulgarian'),
       ('my', 'Burmese'),
       ('ca', 'Catalan; Valencian'),
       ('ch', 'Chamorro'),
       ('ce', 'Chechen'),
       ('ny', 'Chichewa; Chewa; Nyanja'),
       ('zh', 'Chinese'),
       ('cv', 'Chuvash'),
       ('kw', 'Cornish'),
       ('co', 'Corsican'),
       ('cr', 'Cree'),
       ('hr', 'Croatian'),
       ('cs', 'Czech'),
       ('da', 'Danish'),
       ('dv', 'Divehi; Dhivehi; Maldivian;'),
       ('nl', 'Dutch'),
       ('en', 'English'),
       ('eo', 'Esperanto'),
       ('et', 'Estonian'),
       ('ee', 'Ewe'),
       ('fo', 'Faroese'),
       ('fj', 'Fijian'),
       ('fi', 'Finnish'),
       ('fr', 'French'),
       ('ff', 'Fula; Fulah; Pulaar; Pular'),
       ('gl', 'Galician'),
       ('ka', 'Georgian'),
       ('de', 'German'),
       ('el', 'Greek, Modern'),
       ('gn', 'Guaraní'),
       ('gu', 'Gujarati'),
       ('ht', 'Haitian; Haitian Creole'),
       ('ha', 'Hausa'),
       ('he', 'Hebrew'),
       ('hz', 'Herero'),
       ('hi', 'Hindi'),
       ('ho', 'Hiri Motu'),
       ('hu', 'Hungarian'),
       ('ia', 'Interlingua'),
       ('id', 'Indonesian'),
       ('ie', 'Interlingue'),
       ('ga', 'Irish'),
       ('ig', 'Igbo'),
       ('ik', 'Inupiaq'),
       ('io', 'Ido'),
       ('is', 'Icelandic'),
       ('it', 'Italian'),
       ('iu', 'Inuktitut'),
       ('ja', 'Japanese'),
       ('jv', 'Javanese'),
       ('kl', 'Kalaallisut, Greenlandic'),
       ('kn', 'Kannada'),
       ('kr', 'Kanuri'),
       ('ks', 'Kashmiri'),
       ('kk', 'Kazakh'),
       ('km', 'Khmer'),
       ('ki', 'Kikuyu, Gikuyu'),
       ('rw', 'Kinyarwanda'),
       ('ky', 'Kirghiz, Kyrgyz'),
       ('kv', 'Komi'),
       ('kg', 'Kongo'),
       ('ko', 'Korean'),
       ('ku', 'Kurdish'),
       ('kj', 'Kwanyama, Kuanyama'),
       ('la', 'Latin'),
       ('lb', 'Luxembourgish, Letzeburgesch'),
       ('lg', 'Luganda'),
       ('li', 'Limburgish, Limburgan, Limburger'),
       ('ln', 'Lingala'),
       ('lo', 'Lao'),
       ('lt', 'Lithuanian'),
       ('lu', 'Luba-Katanga'),
       ('lv', 'Latvian'),
       ('gv', 'Manx'),
       ('mk', 'Macedonian'),
       ('mg', 'Malagasy'),
       ('ms', 'Malay'),
       ('ml', 'Malayalam'),
       ('mt', 'Maltese'),
       ('mi', 'Māori'),
       ('mr', 'Marathi (Marāṭhī)'),
       ('mh', 'Marshallese'),
       ('mn', 'Mongolian'),
       ('na', 'Nauru'),
       ('nv', 'Navajo, Navaho'),
       ('nb', 'Norwegian Bokmål'),
       ('nd', 'North Ndebele'),
       ('ne', 'Nepali'),
       ('ng', 'Ndonga'),
       ('nn', 'Norwegian Nynorsk'),
       ('no', 'Norwegian'),
       ('ii', 'Nuosu'),
       ('nr', 'South Ndebele'),
       ('oc', 'Occitan'),
       ('oj', 'Ojibwe, Ojibwa'),
       ('cu', 'Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic'),
       ('om', 'Oromo'),
       ('or', 'Oriya'),
       ('os', 'Ossetian, Ossetic'),
       ('pa', 'Panjabi, Punjabi'),
       ('pi', 'Pāli'),
       ('fa', 'Persian'),
       ('pl', 'Polish'),
       ('ps', 'Pashto, Pushto'),
       ('pt', 'Portuguese'),
       ('qu', 'Quechua'),
       ('rm', 'Romansh'),
       ('rn', 'Kirundi'),
       ('ro', 'Romanian, Moldavian, Moldovan'),
       ('ru', 'Russian'),
       ('sa', 'Sanskrit (Saṁskṛta)'),
       ('sc', 'Sardinian'),
       ('sd', 'Sindhi'),
       ('se', 'Northern Sami'),
       ('sm', 'Samoan'),
       ('sg', 'Sango'),
       ('sr', 'Serbian'),
       ('gd', 'Scottish Gaelic; Gaelic'),
       ('sn', 'Shona'),
       ('si', 'Sinhala, Sinhalese'),
       ('sk', 'Slovak'),
       ('sl', 'Slovene'),
       ('so', 'Somali'),
       ('st', 'Southern Sotho'),
       ('es', 'Spanish'),
       ('su', 'Sundanese'),
       ('sw', 'Swahili'),
       ('ss', 'Swati'),
       ('sv', 'Swedish'),
       ('ta', 'Tamil'),
       ('te', 'Telugu'),
       ('tg', 'Tajik'),
       ('th', 'Thai'),
       ('ti', 'Tigrinya'),
       ('bo', 'Tibetan Standard, Tibetan, Central'),
       ('tk', 'Turkmen'),
       ('tl', 'Tagalog'),
       ('tn', 'Tswana'),
       ('to', 'Tonga (Tonga Islands)'),
       ('tr', 'Turkish'),
       ('ts', 'Tsonga'),
       ('tt', 'Tatar'),
       ('tw', 'Twi'),
       ('ty', 'Tahitian'),
       ('ug', 'Uighur, Uyghur'),
       ('uk', 'Ukrainian'),
       ('ur', 'Urdu'),
       ('uz', 'Uzbek'),
       ('ve', 'Venda'),
       ('vi', 'Vietnamese'),
       ('vo', 'Volapük'),
       ('wa', 'Walloon'),
       ('cy', 'Welsh'),
       ('wo', 'Wolof'),
       ('fy', 'Western Frisian'),
       ('xh', 'Xhosa'),
       ('yi', 'Yiddish'),
       ('yo', 'Yoruba'),
       ('za', 'Zhuang, Chuang');

CREATE TABLE IF NOT EXISTS country_list (
    name TEXT NOT NULL,
    code TEXT NOT NULL PRIMARY KEY
);

INSERT INTO country_list VALUES
    ('Afghanistan','AF'),
    ('Albania','AL'),
    ('Algeria','DZ'),
    ('AmericanSamoa','AS'),
    ('Andorra','AD'),
    ('Angola','AO'),
    ('Anguilla','AI'),
    ('Antigua and Barbuda','AG'),
    ('Argentina','AR'),
    ('Armenia','AM'),
    ('Aruba','AW'),
    ('Australia','AU'),
    ('Austria','AT'),
    ('Azerbaijan','AZ'),
    ('Bahamas','BS'),
    ('Bahrain','BH'),
    ('Bangladesh','BD'),
    ('Barbados','BB'),
    ('Belarus','BY'),
    ('Belgium','BE'),
    ('Belize','BZ'),
    ('Benin','BJ'),
    ('Bermuda','BM'),
    ('Bhutan','BT'),
    ('Bosnia and Herzegovina','BA'),
    ('Botswana','BW'),
    ('Brazil','BR'),
    ('British Indian Ocean Territory','IO'),
    ('Bulgaria','BG'),
    ('Burkina Faso','BF'),
    ('Burundi','BI'),
    ('Cambodia','KH'),
    ('Cameroon','CM'),
    ('Canada','CA'),
    ('Cape Verde','CV'),
    ('Cayman Islands','KY'),
    ('Central African Republic','CF'),
    ('Chad','TD'),
    ('Chile','CL'),
    ('China','CN'),
    ('Christmas Island','CX'),
    ('Colombia','CO'),
    ('Comoros','KM'),
    ('Congo','CG'),
    ('Cook Islands','CK'),
    ('Costa Rica','CR'),
    ('Croatia','HR'),
    ('Cuba','CU'),
    ('Cyprus','CY'),
    ('Czech Republic','CZ'),
    ('Denmark','DK'),
    ('Djibouti','DJ'),
    ('Dominica','DM'),
    ('Dominican Republic','DO'),
    ('Ecuador','EC'),
    ('Egypt','EG'),
    ('El Salvador','SV'),
    ('Equatorial Guinea','GQ'),
    ('Eritrea','ER'),
    ('Estonia','EE'),
    ('Ethiopia','ET'),
    ('Faroe Islands','FO'),
    ('Fiji','FJ'),
    ('Finland','FI'),
    ('France','FR'),
    ('French Guiana','GF'),
    ('French Polynesia','PF'),
    ('Gabon','GA'),
    ('Gambia','GM'),
    ('Georgia','GE'),
    ('Germany','DE'),
    ('Ghana','GH'),
    ('Gibraltar','GI'),
    ('Greece','GR'),
    ('Greenland','GL'),
    ('Grenada','GD'),
    ('Guadeloupe','GP'),
    ('Guam','GU'),
    ('Guatemala','GT'),
    ('Guinea','GN'),
    ('Guinea-Bissau','GW'),
    ('Guyana','GY'),
    ('Haiti','HT'),
    ('Honduras','HN'),
    ('Hungary','HU'),
    ('Iceland','IS'),
    ('India','IN'),
    ('Indonesia','ID'),
    ('Iraq','IQ'),
    ('Ireland','IE'),
    ('Israel','IL'),
    ('Italy','IT'),
    ('Iran','IR'),
    ('Jamaica','JM'),
    ('Japan','JP'),
    ('Jordan','JO'),
    ('Kazakhstan','KZ'),
    ('Kenya','KE'),
    ('Kiribati','KI'),
    ('Kuwait','KW'),
    ('Kyrgyzstan','KG'),
    ('Latvia','LV'),
    ('Lebanon','LB'),
    ('Lesotho','LS'),
    ('Liberia','LR'),
    ('Liechtenstein','LI'),
    ('Lithuania','LT'),
    ('Luxembourg','LU'),
    ('Madagascar','MG'),
    ('Malawi','MW'),
    ('Malaysia','MY'),
    ('Maldives','MV'),
    ('Mali','ML'),
    ('Malta','MT'),
    ('Marshall Islands','MH'),
    ('Martinique','MQ'),
    ('Mauritania','MR'),
    ('Mauritius','MU'),
    ('Mayotte','YT'),
    ('Mexico','MX'),
    ('Moldova','MD'),
    ('Monaco','MC'),
    ('Mongolia','MN'),
    ('Montenegro','ME'),
    ('Montserrat','MS'),
    ('Morocco','MA'),
    ('Myanmar','MM'),
    ('Namibia','NA'),
    ('Nauru','NR'),
    ('Nepal','NP'),
    ('Netherlands','NL'),
    ('Netherlands Antilles','AN'),
    ('New Caledonia','NC'),
    ('New Zealand','NZ'),
    ('Nicaragua','NI'),
    ('Niger','NE'),
    ('Nigeria','NG'),
    ('Niue','NU'),
    ('Norfolk Island','NF'),
    ('Northern Mariana Islands','MP'),
    ('Norway','NO'),
    ('Oman','OM'),
    ('Pakistan','PK'),
    ('Palau','PW'),
    ('Panama','PA'),
    ('Papua New Guinea','PG'),
    ('Paraguay','PY'),
    ('Peru','PE'),
    ('Philippines','PH'),
    ('Poland','PL'),
    ('Portugal','PT'),
    ('Puerto Rico','PR'),
    ('Qatar','QA'),
    ('Romania','RO'),
    ('Russia','RU'),
    ('Rwanda','RW'),
    ('Samoa','WS'),
    ('San Marino','SM'),
    ('Saudi Arabia','SA'),
    ('Senegal','SN'),
    ('Serbia','RS'),
    ('Seychelles','SC'),
    ('Sierra Leone','SL'),
    ('Singapore','SG'),
    ('Slovakia','SK'),
    ('Slovenia','SI'),
    ('Solomon Islands','SB'),
    ('South Africa','ZA'),
    ('South Georgia and the South Sandwich Islands','GS'),
    ('Spain','ES'),
    ('Sri Lanka','LK'),
    ('Sudan','SD'),
    ('Suriname','SR'),
    ('Swaziland','SZ'),
    ('Sweden','SE'),
    ('Switzerland','CH'),
    ('Tajikistan','TJ'),
    ('Thailand','TH'),
    ('Togo','TG'),
    ('Tokelau','TK'),
    ('Tonga','TO'),
    ('Trinidad and Tobago','TT'),
    ('Tunisia','TN'),
    ('Turkey','TR'),
    ('Turkmenistan','TM'),
    ('Turks and Caicos Islands','TC'),
    ('Tuvalu','TV'),
    ('Uganda','UG'),
    ('Ukraine','UA'),
    ('United Arab Emirates','AE'),
    ('United Kingdom','GB'),
    ('United States','US'),
    ('Uruguay','UY'),
    ('Uzbekistan','UZ'),
    ('Vanuatu','VU'),
    ('Wallis and Futuna','WF'),
    ('Yemen','YE'),
    ('Zambia','ZM'),
    ('Zimbabwe','ZW'),
    ('land Islands','AX'),
    ('Antarctica','AQ'),
    ('Bolivia, Plurinational State of','BO'),
    ('Brunei Darussalam','BN'),
    ('Cocos (Keeling) Islands','CC'),
    ('Congo, The Democratic Republic of the','CD'),
    ('Cote d''Ivoire','CI'),
    ('Falkland Islands (Malvinas)','FK'),
    ('Guernsey','GG'),
    ('Holy See (Vatican City State)','VA'),
    ('Hong Kong','HK'),
    ('Isle of Man','IM'),
    ('Jersey','JE'),
    ('Korea, Democratic People''s Republic of','KP'),
    ('Korea, Republic of','KR'),
    ('Lao People''s Democratic Republic','LA'),
    ('Libyan Arab Jamahiriya','LY'),
    ('Macao','MO'),
    ('Macedonia, The Former Yugoslav Republic of','MK'),
    ('Micronesia, Federated States of','FM'),
    ('Mozambique','MZ'),
    ('Palestinian Territory','PS'),
    ('Pitcairn','PN'),
    ('Réunion','RE'),
    ('Saint Barthélemy','BL'),
    ('Saint Helena, Ascension and Tristan Da Cunha','SH'),
    ('Saint Kitts and Nevis','KN'),
    ('Saint Lucia','LC'),
    ('Saint Martin','MF'),
    ('Saint Pierre and Miquelon','PM'),
    ('Saint Vincent and the Grenadines','VC'),
    ('Sao Tome and Principe','ST'),
    ('Somalia','SO'),
    ('Svalbard and Jan Mayen','SJ'),
    ('Syrian Arab Republic','SY'),
    ('Taiwan','TW'),
    ('Tanzania, United Republic of','TZ'),
    ('Timor-Leste','TL'),
    ('Venezuela, Bolivarian Republic of','VE'),
    ('Viet Nam','VN'),
    ('Virgin Islands, British','VG'),
    ('Virgin Islands, U.S.','VI');

CREATE TABLE IF NOT EXISTS participation_option (
    name TEXT NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS platform (
    name TEXT NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS audience (
    name TEXT NOT NULL UNIQUE, 
    description TEXT 
);

CREATE TABLE IF NOT EXISTS participant (
	id                      SERIAL PRIMARY KEY,
    keycloak_id             TEXT NOT NULL UNIQUE,
    first_language          TEXT,
    email_language          TEXT,
    dob                     TIMESTAMP WITH TIME ZONE,
    gender                  TEXT,
    email                   TEXT NOT NULL UNIQUE,
    country                 TEXT,
    first_name              TEXT NOT NULL,
    last_name               TEXT NOT NULL,
	created_at              TIMESTAMP WITH TIME ZONE DEFAULT now(),
	updated_at              TIMESTAMP WITH TIME ZONE DEFAULT now(),
    CONSTRAINT fk_country_code FOREIGN KEY(country) REFERENCES country_list(code),
    CONSTRAINT fk_first_language_code FOREIGN KEY(first_language) REFERENCES language_list(code),
    CONSTRAINT fk_email_language_code FOREIGN KEY(email_language) REFERENCES language_list(code)
);

CREATE TABLE IF NOT EXISTS broadcast_url (
	id                      SERIAL PRIMARY KEY,
    url                     TEXT NOT NULL,
    platform                TEXT NOT NULL,
    language                TEXT NOT NULL,
	created_at              TIMESTAMP WITH TIME ZONE DEFAULT now(),
	updated_at              TIMESTAMP WITH TIME ZONE DEFAULT now(),
    CONSTRAINT fk_language_code FOREIGN KEY(language) REFERENCES language_list(code),
    CONSTRAINT fk_platform_id FOREIGN KEY(platform) REFERENCES platform(name)
);

CREATE TABLE IF NOT EXISTS item (
	id                      SERIAL PRIMARY KEY,
    start_date              TIMESTAMP WITH TIME ZONE NOT NULL,
    duration                INT NOT NULL,
    name                    TEXT NOT NULL,
    content                 JSON,
    original_language       TEXT NOT NULL,
    translated              BOOLEAN NOT NULL DEFAULT true,
	created_at              TIMESTAMP WITH TIME ZONE DEFAULT now(),
	updated_at              TIMESTAMP WITH TIME ZONE DEFAULT now(),
    CONSTRAINT fk_original_language_code FOREIGN KEY(original_language) REFERENCES language_list(code)
);

CREATE TABLE IF NOT EXISTS item_broadcast_url (
    id                      SERIAL PRIMARY KEY,
    item_id                 INT NOT NULL,
    broadcast_url_id        INT NOT NULL,
    created_at              TIMESTAMP WITH TIME ZONE DEFAULT now(),
    updated_at              TIMESTAMP WITH TIME ZONE DEFAULT now(),
    CONSTRAINT fk_item_id FOREIGN KEY(item_id) REFERENCES item(id),
    CONSTRAINT fk_broadcast_url_id FOREIGN KEY(broadcast_url_id) REFERENCES broadcast_url(id)
);


CREATE TABLE IF NOT EXISTS event (
	id                      SERIAL PRIMARY KEY,
	registration_required   BOOLEAN NOT NULL DEFAULT false,
	registration_status     TEXT NOT NULL DEFAULT 'open',
	audience                TEXT NOT NULL DEFAULT 'all',
	slug                    TEXT NOT NULL UNIQUE,
	name                    TEXT NOT NULL,
    logo                    TEXT,
    content                 JSON,
    deleted                 BOOLEAN DEFAULT false,
	starts_on               TIMESTAMP WITH TIME ZONE NOT NULL,
	ends_on                 TIMESTAMP WITH TIME ZONE NOT NULL,
    date_confirmed          BOOLEAN NOT NULL DEFAULT false,
	created_at              TIMESTAMP WITH TIME ZONE DEFAULT now(),
	updated_at              TIMESTAMP WITH TIME ZONE DEFAULT now(),
    CONSTRAINT fk_audience_name FOREIGN KEY(audience) REFERENCES audience(name)
);

CREATE TABLE IF NOT EXISTS event_item (
    id                      SERIAL PRIMARY KEY,
    event_id                INT NOT NULL,
    item_id                 INT NOT NULL,
    deleted                 BOOLEAN DEFAULT false,
    created_at              TIMESTAMP WITH TIME ZONE DEFAULT now(),
    updated_at              TIMESTAMP WITH TIME ZONE DEFAULT now(),
    CONSTRAINT fk_event_id FOREIGN KEY(event_id) REFERENCES event(id) ON DELETE CASCADE,
    CONSTRAINT fk_item_id FOREIGN KEY(item_id) REFERENCES item(id)
);


CREATE TABLE IF NOT EXISTS event_participation_option (
    id                      SERIAL PRIMARY KEY,
    event_id                INT NOT NULL,
    participation_option    TEXT NOT NULL,
    deleted                 BOOLEAN DEFAULT false,
    created_at              TIMESTAMP WITH TIME ZONE DEFAULT now(),
    updated_at              TIMESTAMP WITH TIME ZONE DEFAULT now(),
    CONSTRAINT fk_event_id FOREIGN KEY(event_id) REFERENCES event(id) ON DELETE CASCADE,
    CONSTRAINT fk_participation_option_id FOREIGN KEY(participation_option) REFERENCES participation_option(name)
);

CREATE TABLE IF NOT EXISTS participation_status (
	id                   SERIAL PRIMARY KEY,
    participation_option TEXT NOT NULL,
    participant_id       INT NOT NULL,
    event_id             INT NOT NULL,
    deleted              BOOLEAN DEFAULT false,
    confirmed            BOOLEAN NOT NULL DEFAULT false,
    registration_date    TIMESTAMP WITH TIME ZONE NOT NULL,
    created_at           TIMESTAMP WITH TIME ZONE DEFAULT now(),
    updated_at           TIMESTAMP WITH TIME ZONE DEFAULT now(),
    CONSTRAINT fk_participant_id FOREIGN KEY(participant_id) REFERENCES participant(id),
    CONSTRAINT fk_participation_option_name FOREIGN KEY(participation_option) REFERENCES participation_option(name),
    CONSTRAINT fk_event_id FOREIGN KEY(event_id) REFERENCES event(id)  ON DELETE CASCADE
);

COMMIT;
